version: '3.3'

services:
  krs-service:
    image: ghcr.io/coder-repository/krs-service:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/krs-service/Dockerfile
    container_name: krs-service
    ports:
      - "5008:5008"
    environment:
      - PORT=5008
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=coder-siakad
      - DB_SSL=false
      - JWT_SECRET=c70012035ab511e9c577c63366878648546aa5361537063306161537177330ad
    networks:
      - siakad-network

  schedule-service:
    image: ghcr.io/coder-repository/schedule-service:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/schedule-service/Dockerfile
    container_name: schedule-service
    ports:
      - "5005:5005"
    environment:
      - PORT=5005
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=coder-siakad
      - DB_SSL=false
      - JWT_SECRET=c70012035ab511e9c577c63366878648546aa5361537063306161537177330ad
    depends_on:
      - postgres
    networks:
      - siakad-network

  user-service:
    image: ghcr.io/coder-repository/user-service:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/user-service/Dockerfile
    container_name: user-service
    ports:
      - "5003:5003"
    environment:
      - PORT=5002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=coder-siakad
    networks:
      - siakad-network
    depends_on:
      - postgres

  auth-service:
    image: ghcr.io/coder-repository/auth-service:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=coder-siakad
      - DB_SSL=false
      - JWT_SECRET=c70012035ab511e9c577c63366878648546aa5361537063306161537177330ad
    networks:
      - siakad-network
    depends_on:
      - postgres

  data-service:
    image: ghcr.io/data-repository/auth-service:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/data-service/Dockerfile
    container_name: data-service
    ports:
      - "5010:5010"
    environment:
      - PORT=5010
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=coder-siakad
      - DB_SSL=false
      - JWT_SECRET=c70012035ab511e9c577c63366878648546aa5361537063306161537177330ad
    networks:
      - siakad-network
    depends_on:
      - postgres

  mock-service:
    image: ghcr.io/coder-repository/mock-service:latest
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/mock-service/Dockerfile
    container_name: mock-service
    ports:
      - "5002:5002"
    networks:
      - siakad-network

  payment-service:
    image: ghcr.io/coder-repository/payment-service:latest
    platform: linux/amd64
    build:
      context: apps/payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    depends_on:
      - postgres
    environment:
      - PORT=5004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=coder-siakad
      - JWT_SECRET=c70012035ab511e9c577c63366878648546aa5361537063306161537177330ad
      - CLOUDINARY_CLOUD_NAME=dsgv7kpmq
      - CLOUDINARY_API_KEY=211669514833157
      - CLOUDINARY_API_SECRET=0w1ckZHtqg8Uyp9zfOwmVZJv4w8
    ports:
      - "5004:5004"
    networks:
      - siakad-network

  announcement-service:
    image: ghcr.io/coder-repository/announcement-service:latest
    platform: linux/amd64
    build:
      context: apps/announcement-service
      dockerfile: Dockerfile
    container_name: announcement-service
    depends_on:
      - postgres
    environment:
      - PORT=5005
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
#      - DB_HOST=ep-raspy-glitter-a1fuh4un-pooler.ap-southeast-1.aws.neon.tech
      - DB_PORT=5432
      - DB_DATABASE=coder-siakad
#      - DB_USERNAME=oktariorifqi
      - DB_USERNAME=postgres
#      - DB_PASSWORD=WbVHOqg0m6Gw
      - DB_PASSWORD=postgres
    ports:
      - "5005:5005"
    networks:
      - siakad-network

  postgres:
    image: postgres:13
    restart: always
    container_name: siakad-db
    shm_size: 256MB
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coder-siakad
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "6432:5432"
    volumes:
      - postgres_siakad:/var/lib/postgresql/data
    networks:
      - siakad-network

  migrate:
    image: ghcr.io/coder-repository/db-migrate:latest
    platform: linux/amd64
    build:
      context: apps/db-migrate
      dockerfile: Dockerfile
    networks:
      - siakad-network
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/coder-siakad?sslmode=disable

  seed:
    image: ghcr.io/coder-repository/db-seed:latest
    platform: linux/amd64
    build:
      context: apps/db-seed
      dockerfile: Dockerfile
    networks:
      - siakad-network
    depends_on:
      - postgres
      - migrate
    links:
      - postgres
      - migrate
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=coder-siakad
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres

  redis:
    image: redis:6
    container_name: siakad-redis
    ports:
      - "7379:6379"
    networks:
      - siakad-network

  nginx:
    image: nginx:latest
    container_name: siakad-nginx
    ports:
      - "8500:80"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      #      - sample-service
      #      - auth-service
      - mock-service
    #      - postgres
    #      - migrate
    #      - redis
    networks:
      - siakad-network

volumes:
  postgres_siakad:


networks:
  siakad-network:
